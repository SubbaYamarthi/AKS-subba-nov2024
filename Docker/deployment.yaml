apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yourapp-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yourapp-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: yourapp
  template:
    metadata:
      labels:
        app: yourapp
    spec:
      containers:
      - name: lukcy
        image: myacrdockeraks.azurecr.io/subbalukcy:v1
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: storage
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 2
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          periodSeconds: 5
          successThreshold: 1

      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: yourapp-pvc

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: yourapp-network-policy
spec:
  podSelector:
    matchLabels:
      app: yourapp
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: yourapp
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: yourapp

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: yourapp-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yourapp-deployment
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

---
apiVersion: v1
kind: Service
metadata:
  name: yourapp-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: yourapp
